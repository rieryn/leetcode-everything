stock-price

Write an efficient function that takes stock_prices and returns the best profit I could have made from one purchase and one sale of one share of Apple stock yesterday.

For example:

  stock_prices = [10, 7, 5, 8, 11, 9]

get_max_profit(stock_prices)
# Returns 6 (buying for $5 and selling for $11)

No "shorting"—you need to buy before you can sell. Also, you can't buy and sell in the same time step—at least 1 minute has to pass.

iterate once, track current lowest, max profit

def f(stocks):
	lp = stocks[0]
	m = 0
	for i in stocks:
		m = max(i-lp, m)
		lp = min(i, lp)
	return m